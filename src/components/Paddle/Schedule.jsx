import { Box, Typography } from "@mui/material";
import { useUserStore } from "@/store/store";

// SVGs
const LARGE_DIFFERENCE_SVG = (
  <svg viewBox='0 0 371 215' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <path
      d='M220.331 130.752C219.936 131.176 219.264 131.177 218.868 130.752L209.877 121.098H192C189.791 121.098 188 119.307 188 117.098V62.457C188 60.2479 189.791 58.457 192 58.457H245.984C248.193 58.4572 249.984 60.248 249.984 62.457V117.098C249.984 119.307 248.193 121.098 245.984 121.098H229.322L220.331 130.752Z'
      fill='#FF5D1E'
    />
    <path
      d='M10 30.0667C10 30.0667 62.1734 27.7743 99.0253 50.058C148.492 79.9694 144.758 122.572 206.895 145.857C249.134 161.684 370 156.688 370 156.688V215H189.35H10V30.0667Z'
      fill='#FFE4DB'
    />
    <path
      d='M0.666667 30.0308C0.666667 35.1854 4.84534 39.3641 10 39.3641C15.1547 39.3641 19.3333 35.1854 19.3333 30.0308C19.3333 24.8761 15.1547 20.6974 10 20.6974C4.84534 20.6974 0.666667 24.8761 0.666667 30.0308ZM99.3287 49.7494L100.273 48.2761L99.3287 49.7494ZM137.192 83.3742L135.572 84.0362L135.666 84.2678L135.822 84.4636L137.192 83.3742ZM10 30.0308C10.0524 31.78 10.0523 31.78 10.0524 31.78C10.0527 31.78 10.053 31.78 10.0536 31.7799C10.0548 31.7799 10.0569 31.7798 10.0599 31.7798C10.0657 31.7796 10.075 31.7793 10.0876 31.779C10.1127 31.7783 10.1512 31.7773 10.2028 31.7761C10.3058 31.7737 10.4611 31.7704 10.6661 31.7669C11.0761 31.76 11.6851 31.7525 12.4739 31.7505C14.0517 31.7465 16.3483 31.7644 19.2106 31.8523C24.9369 32.0282 32.9186 32.4842 41.9333 33.6037C60.0178 35.8496 82.0328 40.7405 98.3842 51.2226L99.3287 49.7494L100.273 48.2761C83.2502 37.3635 60.6008 32.3951 42.3646 30.1304C33.219 28.9946 25.1261 28.5324 19.3181 28.354C16.4132 28.2647 14.0776 28.2464 12.465 28.2505C11.6587 28.2526 11.0329 28.2602 10.607 28.2674C10.394 28.271 10.231 28.2745 10.1203 28.2771C10.065 28.2784 10.0227 28.2795 9.99381 28.2803C9.97937 28.2806 9.96827 28.2809 9.96056 28.2812C9.9567 28.2813 9.95369 28.2814 9.95153 28.2814C9.95045 28.2815 9.94947 28.2815 9.94893 28.2815C9.94816 28.2815 9.9476 28.2815 10 30.0308ZM99.3287 49.7494L98.3842 51.2226C114.629 61.6367 123.975 69.9521 129.235 75.6104C131.864 78.4387 133.471 80.6011 134.409 82.028C134.878 82.7415 135.18 83.2712 135.359 83.6086C135.449 83.7773 135.507 83.898 135.541 83.9696C135.558 84.0054 135.568 84.029 135.573 84.0401C135.576 84.0457 135.577 84.0482 135.576 84.0475C135.576 84.0472 135.576 84.0461 135.575 84.0442C135.575 84.0433 135.574 84.0422 135.574 84.0408C135.573 84.0402 135.573 84.039 135.573 84.0387C135.572 84.0375 135.572 84.0362 137.192 83.3742C138.812 82.7122 138.811 82.7109 138.811 82.7095C138.81 82.709 138.81 82.7075 138.809 82.7065C138.808 82.7044 138.807 82.7021 138.806 82.6996C138.804 82.6946 138.802 82.6889 138.799 82.6824C138.794 82.6694 138.787 82.6534 138.778 82.6344C138.762 82.5963 138.739 82.5461 138.71 82.484C138.652 82.3597 138.567 82.1877 138.451 81.9689C138.219 81.5315 137.861 80.9074 137.334 80.1054C136.28 78.5015 134.549 76.1862 131.798 73.2273C126.298 67.3113 116.712 58.8143 100.273 48.2761L99.3287 49.7494ZM137.192 83.3742L135.822 84.4636C142.702 93.1123 148.099 100.546 153.026 107.104C157.94 113.644 162.39 119.318 167.308 124.324C177.215 134.41 188.907 141.67 209.947 148.265L210.471 146.595L210.994 144.925C190.369 138.46 179.221 131.457 169.805 121.871C165.061 117.042 160.728 111.528 155.824 105.002C150.935 98.4941 145.481 90.9839 138.561 82.2848L137.192 83.3742ZM210.471 146.595L209.947 148.265C220.557 151.591 235.896 153.779 252.827 155.21C269.791 156.643 288.474 157.325 305.832 157.597C323.194 157.87 339.249 157.734 350.963 157.53C356.821 157.427 361.594 157.308 364.904 157.215C366.559 157.168 367.848 157.127 368.724 157.099C369.162 157.084 369.496 157.073 369.722 157.065C369.834 157.061 369.92 157.058 369.977 157.056C370.006 157.055 370.028 157.054 370.042 157.053C370.05 157.053 370.055 157.053 370.059 157.053C370.061 157.053 370.062 157.053 370.063 157.053C370.064 157.053 370.065 157.053 370 155.304C369.935 153.555 369.935 153.555 369.934 153.555C369.933 153.555 369.932 153.555 369.93 153.555C369.927 153.555 369.922 153.556 369.915 153.556C369.901 153.556 369.88 153.557 369.852 153.558C369.795 153.56 369.711 153.563 369.6 153.567C369.376 153.575 369.044 153.586 368.609 153.6C367.738 153.629 366.454 153.669 364.805 153.716C361.506 153.809 356.746 153.928 350.902 154.03C339.215 154.234 323.2 154.37 305.887 154.098C288.571 153.826 269.976 153.146 253.122 151.722C236.235 150.296 221.217 148.13 210.994 144.925L210.471 146.595Z'
      fill='url(#paint0_linear_13104_13282)'
    />
    <path
      d='M229.417 148.708C229.417 154.07 225.07 158.417 219.708 158.417C214.347 158.417 210 154.07 210 148.708C210 143.347 214.347 139 219.708 139C225.07 139 229.417 143.347 229.417 148.708Z'
      fill='#FF5D1E'
    />
    <path
      d='M254.11 182H252.444V174.692L249.35 182H247.894L244.828 174.72V182H243.19V172.074H245.43L248.65 179.648L251.828 172.074H254.11V182ZM255.892 180.152C255.892 179.573 256.078 179.111 256.452 178.766C256.834 178.411 257.334 178.187 257.95 178.094L259.7 177.828C260.036 177.781 260.204 177.618 260.204 177.338C260.204 177.03 260.096 176.783 259.882 176.596C259.667 176.4 259.345 176.302 258.916 176.302C258.505 176.302 258.178 176.419 257.936 176.652C257.693 176.876 257.553 177.17 257.516 177.534L256.032 177.198C256.097 176.582 256.391 176.059 256.914 175.63C257.436 175.191 258.099 174.972 258.902 174.972C259.891 174.972 260.619 175.21 261.086 175.686C261.562 176.162 261.8 176.773 261.8 177.52V180.908C261.8 181.356 261.828 181.72 261.884 182H260.372C260.325 181.86 260.302 181.571 260.302 181.132C259.854 181.851 259.154 182.21 258.202 182.21C257.511 182.21 256.951 182.009 256.522 181.608C256.102 181.197 255.892 180.712 255.892 180.152ZM258.51 180.936C259.014 180.936 259.42 180.801 259.728 180.53C260.045 180.25 260.204 179.797 260.204 179.172V178.864L258.426 179.13C257.819 179.233 257.516 179.541 257.516 180.054C257.516 180.297 257.604 180.507 257.782 180.684C257.959 180.852 258.202 180.936 258.51 180.936ZM265.373 182H263.763V175.182H265.373V182ZM263.819 173.53C263.614 173.325 263.511 173.077 263.511 172.788C263.511 172.499 263.614 172.251 263.819 172.046C264.024 171.831 264.272 171.724 264.561 171.724C264.86 171.724 265.112 171.827 265.317 172.032C265.522 172.237 265.625 172.489 265.625 172.788C265.625 173.077 265.522 173.325 265.317 173.53C265.112 173.735 264.86 173.838 264.561 173.838C264.272 173.838 264.024 173.735 263.819 173.53ZM269.092 178.066V182H267.468V175.182H269.05V176.092C269.265 175.719 269.549 175.443 269.904 175.266C270.268 175.079 270.655 174.986 271.066 174.986C271.869 174.986 272.48 175.238 272.9 175.742C273.32 176.246 273.53 176.895 273.53 177.688V182H271.906V177.968C271.906 177.511 271.794 177.147 271.57 176.876C271.346 176.596 270.991 176.456 270.506 176.456C270.058 176.456 269.708 176.61 269.456 176.918C269.213 177.217 269.092 177.599 269.092 178.066ZM277.565 173.096V175.182H278.979V176.624H277.565V179.788C277.565 180.087 277.635 180.306 277.775 180.446C277.915 180.577 278.134 180.642 278.433 180.642C278.62 180.642 278.806 180.623 278.993 180.586V181.93C278.75 182.033 278.419 182.084 277.999 182.084C277.364 182.084 276.865 181.907 276.501 181.552C276.137 181.188 275.955 180.689 275.955 180.054V176.624H274.695V175.182H275.045C275.39 175.182 275.652 175.084 275.829 174.888C276.006 174.692 276.095 174.435 276.095 174.118V173.096H277.565ZM280.241 180.152C280.241 179.573 280.428 179.111 280.801 178.766C281.184 178.411 281.683 178.187 282.299 178.094L284.049 177.828C284.385 177.781 284.553 177.618 284.553 177.338C284.553 177.03 284.446 176.783 284.231 176.596C284.017 176.4 283.695 176.302 283.265 176.302C282.855 176.302 282.528 176.419 282.285 176.652C282.043 176.876 281.903 177.17 281.865 177.534L280.381 177.198C280.447 176.582 280.741 176.059 281.263 175.63C281.786 175.191 282.449 174.972 283.251 174.972C284.241 174.972 284.969 175.21 285.435 175.686C285.911 176.162 286.149 176.773 286.149 177.52V180.908C286.149 181.356 286.177 181.72 286.233 182H284.721C284.675 181.86 284.651 181.571 284.651 181.132C284.203 181.851 283.503 182.21 282.551 182.21C281.861 182.21 281.301 182.009 280.871 181.608C280.451 181.197 280.241 180.712 280.241 180.152ZM282.859 180.936C283.363 180.936 283.769 180.801 284.077 180.53C284.395 180.25 284.553 179.797 284.553 179.172V178.864L282.775 179.13C282.169 179.233 281.865 179.541 281.865 180.054C281.865 180.297 281.954 180.507 282.131 180.684C282.309 180.852 282.551 180.936 282.859 180.936ZM289.723 182H288.113V175.182H289.723V182ZM288.169 173.53C287.963 173.325 287.861 173.077 287.861 172.788C287.861 172.499 287.963 172.251 288.169 172.046C288.374 171.831 288.621 171.724 288.91 171.724C289.209 171.724 289.461 171.827 289.667 172.032C289.872 172.237 289.975 172.489 289.975 172.788C289.975 173.077 289.872 173.325 289.667 173.53C289.461 173.735 289.209 173.838 288.91 173.838C288.621 173.838 288.374 173.735 288.169 173.53ZM293.442 178.066V182H291.818V175.182H293.4V176.092C293.614 175.719 293.899 175.443 294.254 175.266C294.618 175.079 295.005 174.986 295.416 174.986C296.218 174.986 296.83 175.238 297.25 175.742C297.67 176.246 297.88 176.895 297.88 177.688V182H296.256V177.968C296.256 177.511 296.144 177.147 295.92 176.876C295.696 176.596 295.341 176.456 294.856 176.456C294.408 176.456 294.058 176.61 293.806 176.918C293.563 177.217 293.442 177.599 293.442 178.066ZM307.193 175.182H308.873L310.483 179.9L311.841 175.182H313.493L311.309 182H309.685L307.991 177.1L306.339 182H304.673L302.461 175.182H304.197L305.583 179.9L307.193 175.182ZM315.702 177.842H319.048C319.029 177.413 318.875 177.053 318.586 176.764C318.306 176.475 317.9 176.33 317.368 176.33C316.882 176.33 316.49 176.484 316.192 176.792C315.893 177.091 315.73 177.441 315.702 177.842ZM319.23 179.62L320.602 180.054C320.406 180.679 320.037 181.197 319.496 181.608C318.964 182.009 318.306 182.21 317.522 182.21C316.551 182.21 315.725 181.879 315.044 181.216C314.372 180.553 314.036 179.667 314.036 178.556C314.036 177.511 314.362 176.652 315.016 175.98C315.678 175.308 316.458 174.972 317.354 174.972C318.399 174.972 319.216 175.294 319.804 175.938C320.392 176.573 320.686 177.431 320.686 178.514C320.686 178.803 320.672 178.976 320.644 179.032H315.66C315.678 179.545 315.865 179.97 316.22 180.306C316.584 180.642 317.018 180.81 317.522 180.81C318.399 180.81 318.968 180.413 319.23 179.62ZM323.848 182H322.238V175.182H323.848V182ZM322.294 173.53C322.088 173.325 321.986 173.077 321.986 172.788C321.986 172.499 322.088 172.251 322.294 172.046C322.499 171.831 322.746 171.724 323.035 171.724C323.334 171.724 323.586 171.827 323.792 172.032C323.997 172.237 324.1 172.489 324.1 172.788C324.1 173.077 323.997 173.325 323.792 173.53C323.586 173.735 323.334 173.838 323.035 173.838C322.746 173.838 322.499 173.735 322.294 173.53ZM325.453 182.378L326.951 181.986C327.007 182.415 327.189 182.765 327.497 183.036C327.814 183.316 328.201 183.456 328.659 183.456C329.947 183.456 330.591 182.775 330.591 181.412V180.698C330.432 180.987 330.18 181.225 329.835 181.412C329.489 181.599 329.083 181.692 328.617 181.692C327.702 181.692 326.946 181.379 326.349 180.754C325.761 180.129 325.467 179.335 325.467 178.374C325.467 177.45 325.761 176.666 326.349 176.022C326.937 175.378 327.693 175.056 328.617 175.056C329.615 175.056 330.287 175.387 330.633 176.05V175.182H332.201V181.356C332.201 182.364 331.916 183.199 331.347 183.862C330.777 184.534 329.895 184.87 328.701 184.87C327.823 184.87 327.086 184.632 326.489 184.156C325.891 183.68 325.546 183.087 325.453 182.378ZM328.883 180.306C329.405 180.306 329.825 180.133 330.143 179.788C330.469 179.433 330.633 178.962 330.633 178.374C330.633 177.795 330.469 177.333 330.143 176.988C329.816 176.633 329.396 176.456 328.883 176.456C328.36 176.456 327.931 176.633 327.595 176.988C327.268 177.333 327.105 177.795 327.105 178.374C327.105 178.962 327.268 179.433 327.595 179.788C327.921 180.133 328.351 180.306 328.883 180.306ZM335.811 177.996V182H334.187V171.864H335.811V175.84C336.249 175.271 336.898 174.986 337.757 174.986C338.559 174.986 339.175 175.238 339.605 175.742C340.034 176.246 340.249 176.895 340.249 177.688V182H338.625V177.968C338.625 177.511 338.513 177.147 338.289 176.876C338.065 176.596 337.71 176.456 337.225 176.456C336.795 176.456 336.455 176.601 336.203 176.89C335.96 177.179 335.829 177.548 335.811 177.996ZM344.284 173.096V175.182H345.698V176.624H344.284V179.788C344.284 180.087 344.354 180.306 344.494 180.446C344.634 180.577 344.853 180.642 345.152 180.642C345.338 180.642 345.525 180.623 345.712 180.586V181.93C345.469 182.033 345.138 182.084 344.718 182.084C344.083 182.084 343.584 181.907 343.22 181.552C342.856 181.188 342.674 180.689 342.674 180.054V176.624H341.414V175.182H341.764C342.109 175.182 342.37 175.084 342.548 174.888C342.725 174.692 342.814 174.435 342.814 174.118V173.096H344.284Z'
      fill='#249A50'
    />
    <defs>
      <linearGradient
        id='paint0_linear_13104_13282'
        x1='6.42867'
        y1='-22.4061'
        x2='259.886'
        y2='88.1236'
        gradientUnits='userSpaceOnUse'>
        <stop stopColor='#FF5C1D' />
        <stop offset='0.923237' stopColor='#FF5C1D' />
        <stop offset='1' stopColor='#249A50' />
      </linearGradient>
    </defs>
  </svg>
);

const SMALL_DIFFERENCE_SVG = (
  <svg viewBox='0 0 371 152' fill='none' xmlns='http://www.w3.org/2000/svg'>
    <path
      d='M215.331 81.752C214.936 82.1765 214.264 82.1766 213.868 81.752L204.877 72.0977H187C184.791 72.0977 183 70.3068 183 68.0977V13.457C183 11.2479 184.791 9.45703 187 9.45703H240.984C243.193 9.45718 244.984 11.248 244.984 13.457V68.0977C244.984 70.3067 243.193 72.0975 240.984 72.0977H224.322L215.331 81.752Z'
      fill='#FF5D1E'
    />
    <path
      d='M9 104.028C9.05301 111.18 15.5343 101.401 56.7004 109.286C77.8077 104.867 94.5831 75.7279 127.924 98.7728C148.834 113.225 171.704 97.4557 203.069 98.77C220.888 99.5167 371 106 371 106V152H189.347H9V104.028Z'
      fill='#FFE4DB'
    />
    <path
      d='M0.666667 101C0.666667 106.155 4.84534 110.333 10 110.333C15.1547 110.333 19.3333 106.155 19.3333 101C19.3333 95.8453 15.1547 91.6667 10 91.6667C4.84534 91.6667 0.666667 95.8453 0.666667 101ZM78 97.8289L76.971 96.4134L76.971 96.4134L78 97.8289ZM122 97.0012L120.885 98.3498L120.934 98.3902L120.985 98.427L122 97.0012ZM10 101C9.20906 102.561 9.20981 102.561 9.21071 102.562C9.2112 102.562 9.21224 102.563 9.21322 102.563C9.21518 102.564 9.21771 102.565 9.22081 102.567C9.22701 102.57 9.23549 102.574 9.24623 102.58C9.26771 102.59 9.29822 102.606 9.3376 102.625C9.41635 102.664 9.53057 102.719 9.67889 102.789C9.97552 102.93 10.4087 103.13 10.9675 103.376C12.085 103.866 13.7062 104.537 15.744 105.269C19.8164 106.733 25.5702 108.449 32.3028 109.459C45.7547 111.478 63.2766 110.695 79.029 99.2445L78 97.8289L76.971 96.4134C62.2234 107.134 45.7453 107.937 32.8222 105.998C26.3673 105.03 20.8399 103.381 16.9278 101.975C14.9735 101.273 13.4268 100.633 12.3743 100.171C11.8481 99.9397 11.4459 99.7535 11.1783 99.6267C11.0445 99.5633 10.9444 99.5147 10.8794 99.4828C10.8469 99.4668 10.8232 99.455 10.8084 99.4477C10.801 99.444 10.7958 99.4414 10.7929 99.4399C10.7914 99.4392 10.7905 99.4387 10.7902 99.4386C10.79 99.4385 10.7902 99.4386 10.7901 99.4385C10.7905 99.4387 10.7909 99.4389 10 101ZM78 97.8289L79.029 99.2445C90.5357 90.88 100.993 90.7243 108.563 92.5861C112.375 93.5237 115.479 94.9812 117.627 96.2034C118.7 96.8136 119.529 97.3623 120.083 97.7531C120.361 97.9484 120.569 98.1039 120.704 98.2075C120.771 98.2593 120.82 98.298 120.851 98.3223C120.866 98.3344 120.876 98.3429 120.882 98.3475C120.885 98.3498 120.887 98.3512 120.887 98.3516C120.887 98.3518 120.887 98.3517 120.887 98.3514C120.887 98.3513 120.886 98.3509 120.886 98.3508C120.885 98.3503 120.885 98.3498 122 97.0012C123.115 95.6525 123.114 95.6519 123.114 95.6511C123.113 95.6508 123.112 95.65 123.111 95.6494C123.11 95.6481 123.108 95.6465 123.106 95.6447C123.101 95.6411 123.096 95.6365 123.089 95.6309C123.075 95.6197 123.056 95.6047 123.033 95.586C122.986 95.5485 122.92 95.4963 122.834 95.4309C122.664 95.3001 122.418 95.1164 122.1 94.8923C121.464 94.4443 120.54 93.8336 119.358 93.1613C116.998 91.8187 113.593 90.2189 109.399 89.1874C100.956 87.1109 89.413 87.3691 76.971 96.4134L78 97.8289ZM122 97.0012L120.985 98.427C129.303 104.346 136.236 107.028 142.762 107.722C149.261 108.414 155.182 107.11 161.364 105.38C173.693 101.93 187.572 96.6349 211.237 100.233L211.5 98.5029L211.763 96.7727C187.243 93.0446 172.654 98.5859 160.421 102.01C154.322 103.716 148.938 104.86 143.132 104.242C137.352 103.627 130.98 101.244 123.015 95.5753L122 97.0012ZM211.5 98.5029L211.237 100.233C235.462 103.916 275.325 105.416 309.039 106C325.916 106.292 341.284 106.355 352.434 106.346C358.009 106.341 362.529 106.317 365.657 106.295C367.22 106.284 368.436 106.274 369.261 106.266C369.673 106.262 369.988 106.259 370.2 106.256C370.305 106.255 370.386 106.254 370.439 106.254C370.466 106.253 370.487 106.253 370.5 106.253C370.507 106.253 370.512 106.253 370.516 106.253C370.517 106.253 370.519 106.253 370.52 106.253C370.52 106.253 370.521 106.253 370.5 104.503C370.479 102.753 370.479 102.753 370.478 102.753C370.477 102.753 370.476 102.753 370.474 102.753C370.471 102.753 370.466 102.753 370.459 102.753C370.446 102.753 370.426 102.754 370.4 102.754C370.346 102.755 370.267 102.755 370.162 102.757C369.951 102.759 369.638 102.762 369.227 102.766C368.405 102.774 367.193 102.785 365.632 102.796C362.511 102.818 357.998 102.841 352.431 102.846C341.296 102.855 325.95 102.792 309.1 102.5C275.36 101.916 235.723 100.416 211.763 96.7727L211.5 98.5029Z'
      fill='url(#paint0_linear_13105_13363)'
    />
    <circle cx='214.737' cy='98.7371' r='9.73707' fill='#FF5D1E' />
    <path
      d='M257.11 137H255.444V129.692L252.35 137H250.894L247.828 129.72V137H246.19V127.074H248.43L251.65 134.648L254.828 127.074H257.11V137ZM258.892 135.152C258.892 134.573 259.078 134.111 259.452 133.766C259.834 133.411 260.334 133.187 260.95 133.094L262.7 132.828C263.036 132.781 263.204 132.618 263.204 132.338C263.204 132.03 263.096 131.783 262.882 131.596C262.667 131.4 262.345 131.302 261.916 131.302C261.505 131.302 261.178 131.419 260.936 131.652C260.693 131.876 260.553 132.17 260.516 132.534L259.032 132.198C259.097 131.582 259.391 131.059 259.914 130.63C260.436 130.191 261.099 129.972 261.902 129.972C262.891 129.972 263.619 130.21 264.086 130.686C264.562 131.162 264.8 131.773 264.8 132.52V135.908C264.8 136.356 264.828 136.72 264.884 137H263.372C263.325 136.86 263.302 136.571 263.302 136.132C262.854 136.851 262.154 137.21 261.202 137.21C260.511 137.21 259.951 137.009 259.522 136.608C259.102 136.197 258.892 135.712 258.892 135.152ZM261.51 135.936C262.014 135.936 262.42 135.801 262.728 135.53C263.045 135.25 263.204 134.797 263.204 134.172V133.864L261.426 134.13C260.819 134.233 260.516 134.541 260.516 135.054C260.516 135.297 260.604 135.507 260.782 135.684C260.959 135.852 261.202 135.936 261.51 135.936ZM268.373 137H266.763V130.182H268.373V137ZM266.819 128.53C266.614 128.325 266.511 128.077 266.511 127.788C266.511 127.499 266.614 127.251 266.819 127.046C267.024 126.831 267.272 126.724 267.561 126.724C267.86 126.724 268.112 126.827 268.317 127.032C268.522 127.237 268.625 127.489 268.625 127.788C268.625 128.077 268.522 128.325 268.317 128.53C268.112 128.735 267.86 128.838 267.561 128.838C267.272 128.838 267.024 128.735 266.819 128.53ZM272.092 133.066V137H270.468V130.182H272.05V131.092C272.265 130.719 272.549 130.443 272.904 130.266C273.268 130.079 273.655 129.986 274.066 129.986C274.869 129.986 275.48 130.238 275.9 130.742C276.32 131.246 276.53 131.895 276.53 132.688V137H274.906V132.968C274.906 132.511 274.794 132.147 274.57 131.876C274.346 131.596 273.991 131.456 273.506 131.456C273.058 131.456 272.708 131.61 272.456 131.918C272.213 132.217 272.092 132.599 272.092 133.066ZM280.565 128.096V130.182H281.979V131.624H280.565V134.788C280.565 135.087 280.635 135.306 280.775 135.446C280.915 135.577 281.134 135.642 281.433 135.642C281.62 135.642 281.806 135.623 281.993 135.586V136.93C281.75 137.033 281.419 137.084 280.999 137.084C280.364 137.084 279.865 136.907 279.501 136.552C279.137 136.188 278.955 135.689 278.955 135.054V131.624H277.695V130.182H278.045C278.39 130.182 278.652 130.084 278.829 129.888C279.006 129.692 279.095 129.435 279.095 129.118V128.096H280.565ZM283.241 135.152C283.241 134.573 283.428 134.111 283.801 133.766C284.184 133.411 284.683 133.187 285.299 133.094L287.049 132.828C287.385 132.781 287.553 132.618 287.553 132.338C287.553 132.03 287.446 131.783 287.231 131.596C287.017 131.4 286.695 131.302 286.265 131.302C285.855 131.302 285.528 131.419 285.285 131.652C285.043 131.876 284.903 132.17 284.865 132.534L283.381 132.198C283.447 131.582 283.741 131.059 284.263 130.63C284.786 130.191 285.449 129.972 286.251 129.972C287.241 129.972 287.969 130.21 288.435 130.686C288.911 131.162 289.149 131.773 289.149 132.52V135.908C289.149 136.356 289.177 136.72 289.233 137H287.721C287.675 136.86 287.651 136.571 287.651 136.132C287.203 136.851 286.503 137.21 285.551 137.21C284.861 137.21 284.301 137.009 283.871 136.608C283.451 136.197 283.241 135.712 283.241 135.152ZM285.859 135.936C286.363 135.936 286.769 135.801 287.077 135.53C287.395 135.25 287.553 134.797 287.553 134.172V133.864L285.775 134.13C285.169 134.233 284.865 134.541 284.865 135.054C284.865 135.297 284.954 135.507 285.131 135.684C285.309 135.852 285.551 135.936 285.859 135.936ZM292.723 137H291.113V130.182H292.723V137ZM291.169 128.53C290.963 128.325 290.861 128.077 290.861 127.788C290.861 127.499 290.963 127.251 291.169 127.046C291.374 126.831 291.621 126.724 291.91 126.724C292.209 126.724 292.461 126.827 292.667 127.032C292.872 127.237 292.975 127.489 292.975 127.788C292.975 128.077 292.872 128.325 292.667 128.53C292.461 128.735 292.209 128.838 291.91 128.838C291.621 128.838 291.374 128.735 291.169 128.53ZM296.442 133.066V137H294.818V130.182H296.4V131.092C296.614 130.719 296.899 130.443 297.254 130.266C297.618 130.079 298.005 129.986 298.416 129.986C299.218 129.986 299.83 130.238 300.25 130.742C300.67 131.246 300.88 131.895 300.88 132.688V137H299.256V132.968C299.256 132.511 299.144 132.147 298.92 131.876C298.696 131.596 298.341 131.456 297.856 131.456C297.408 131.456 297.058 131.61 296.806 131.918C296.563 132.217 296.442 132.599 296.442 133.066ZM310.193 130.182H311.873L313.483 134.9L314.841 130.182H316.493L314.309 137H312.685L310.991 132.1L309.339 137H307.673L305.461 130.182H307.197L308.583 134.9L310.193 130.182ZM318.702 132.842H322.048C322.029 132.413 321.875 132.053 321.586 131.764C321.306 131.475 320.9 131.33 320.368 131.33C319.882 131.33 319.49 131.484 319.192 131.792C318.893 132.091 318.73 132.441 318.702 132.842ZM322.23 134.62L323.602 135.054C323.406 135.679 323.037 136.197 322.496 136.608C321.964 137.009 321.306 137.21 320.522 137.21C319.551 137.21 318.725 136.879 318.044 136.216C317.372 135.553 317.036 134.667 317.036 133.556C317.036 132.511 317.362 131.652 318.016 130.98C318.678 130.308 319.458 129.972 320.354 129.972C321.399 129.972 322.216 130.294 322.804 130.938C323.392 131.573 323.686 132.431 323.686 133.514C323.686 133.803 323.672 133.976 323.644 134.032H318.66C318.678 134.545 318.865 134.97 319.22 135.306C319.584 135.642 320.018 135.81 320.522 135.81C321.399 135.81 321.968 135.413 322.23 134.62ZM326.848 137H325.238V130.182H326.848V137ZM325.294 128.53C325.088 128.325 324.986 128.077 324.986 127.788C324.986 127.499 325.088 127.251 325.294 127.046C325.499 126.831 325.746 126.724 326.035 126.724C326.334 126.724 326.586 126.827 326.792 127.032C326.997 127.237 327.1 127.489 327.1 127.788C327.1 128.077 326.997 128.325 326.792 128.53C326.586 128.735 326.334 128.838 326.035 128.838C325.746 128.838 325.499 128.735 325.294 128.53ZM328.453 137.378L329.951 136.986C330.007 137.415 330.189 137.765 330.497 138.036C330.814 138.316 331.201 138.456 331.659 138.456C332.947 138.456 333.591 137.775 333.591 136.412V135.698C333.432 135.987 333.18 136.225 332.835 136.412C332.489 136.599 332.083 136.692 331.617 136.692C330.702 136.692 329.946 136.379 329.349 135.754C328.761 135.129 328.467 134.335 328.467 133.374C328.467 132.45 328.761 131.666 329.349 131.022C329.937 130.378 330.693 130.056 331.617 130.056C332.615 130.056 333.287 130.387 333.633 131.05V130.182H335.201V136.356C335.201 137.364 334.916 138.199 334.347 138.862C333.777 139.534 332.895 139.87 331.701 139.87C330.823 139.87 330.086 139.632 329.489 139.156C328.891 138.68 328.546 138.087 328.453 137.378ZM331.883 135.306C332.405 135.306 332.825 135.133 333.143 134.788C333.469 134.433 333.633 133.962 333.633 133.374C333.633 132.795 333.469 132.333 333.143 131.988C332.816 131.633 332.396 131.456 331.883 131.456C331.36 131.456 330.931 131.633 330.595 131.988C330.268 132.333 330.105 132.795 330.105 133.374C330.105 133.962 330.268 134.433 330.595 134.788C330.921 135.133 331.351 135.306 331.883 135.306ZM338.811 132.996V137H337.187V126.864H338.811V130.84C339.249 130.271 339.898 129.986 340.757 129.986C341.559 129.986 342.175 130.238 342.605 130.742C343.034 131.246 343.249 131.895 343.249 132.688V137H341.625V132.968C341.625 132.511 341.513 132.147 341.289 131.876C341.065 131.596 340.71 131.456 340.225 131.456C339.795 131.456 339.455 131.601 339.203 131.89C338.96 132.179 338.829 132.548 338.811 132.996ZM347.284 128.096V130.182H348.698V131.624H347.284V134.788C347.284 135.087 347.354 135.306 347.494 135.446C347.634 135.577 347.853 135.642 348.152 135.642C348.338 135.642 348.525 135.623 348.712 135.586V136.93C348.469 137.033 348.138 137.084 347.718 137.084C347.083 137.084 346.584 136.907 346.22 136.552C345.856 136.188 345.674 135.689 345.674 135.054V131.624H344.414V130.182H344.764C345.109 130.182 345.37 130.084 345.548 129.888C345.725 129.692 345.814 129.435 345.814 129.118V128.096H347.284Z'
      fill='#249A50'
    />
    <defs>
      <linearGradient
        id='paint0_linear_13105_13363'
        x1='3.66181'
        y1='-41.707'
        x2='240.867'
        y2='86.3421'
        gradientUnits='userSpaceOnUse'>
        <stop stopColor='#FF5C1D' />
        <stop offset='0.923237' stopColor='#FF5C1D' />
        <stop offset='1' stopColor='#249A50' />
      </linearGradient>
    </defs>
  </svg>
);

export const Schedule = () => {
  // Fetching real data from the store
  const measurementSystem = useUserStore((state) => state.measurementSystem);
  const realUserWeight = Number(useUserStore((state) => state.weight));
  const realIdealWeight = Number(useUserStore((state) => state.idealWeight));

  // Return null if the fetched weight data is invalid
  if (isNaN(realUserWeight) || isNaN(realIdealWeight)) return null;

  // Function to convert weight from kilograms to pounds
  const convertWeight = (weightInKg) => {
    return measurementSystem === "imperial" ? Math.floor(weightInKg * 2.20462 * 10) / 10 : weightInKg;
  };

  // Function to format the displayed weight based on the measurement system
  const getDisplayWeight = (weight) => {
    return measurementSystem === "imperial" ? `${convertWeight(weight).toFixed(1)} lbs` : `${weight} kg`;
  };

  // Calculate the difference between current and ideal weight
  const weightDifference = Math.abs(realUserWeight - realIdealWeight);
  const isSmallDifference = weightDifference <= 3;

  // Calculate the goal date based on weight difference and weekly progress
  const currentUnix = Math.floor(Date.now() / 1000); // Current date in Unix timestamp
  const weeksNeeded = weightDifference === 0 ? 0 : weightDifference / 0.5; // Progress: 0.5 kg per week
  const goalUnix = currentUnix + weeksNeeded * 7 * 24 * 60 * 60; // Calculate goal date in Unix timestamp
  const goalDate = new Date(goalUnix * 1000); // Convert timestamp to Date object
  const formattedGoalDate = goalDate.toLocaleDateString("en-US", {
    month: "long",
    day: "numeric",
  });

  return (
    <>
      {/* Display goal information if the weight difference is greater than 0 */}
      {weightDifference > 0 ? (
        <>
          <Typography
            sx={{
              fontSize: "22px",
              color: "#241063",
              fontWeight: 500,
              textAlign: "center",
            }}>
            You can reach your goal of
          </Typography>
          <Typography
            sx={{
              fontSize: "22px",
              color: "#241063",
              fontWeight: 500,
              textAlign: "center",
            }}>
            <strong style={{ color: "#FF5C1D" }}>{getDisplayWeight(realIdealWeight)}</strong> by{" "}
            <strong>{formattedGoalDate}</strong>
          </Typography>
        </>
      ) : (
        <>
          {/* Display a message if the user has already reached their goal */}
          <Typography
            sx={{
              fontSize: "22px",
              color: "#241063",
              fontWeight: 500,
              textAlign: "center",
            }}>
            You&apos;ve already reached your goal of
          </Typography>

          <Typography
            sx={{
              fontSize: "22px",
              color: "#241063",
              fontWeight: 500,
              textAlign: "center",
              mb: 2,
            }}>
            <strong style={{ color: "#FF5C1D" }}>{getDisplayWeight(realIdealWeight)}</strong>
          </Typography>
        </>
      )}

      {/* Render the box showing weight differences and graphics */}
      <Box
        sx={{
          padding: "24px 16px",
          backgroundColor: "#fff",
          borderRadius: "8px",
          boxShadow: "0px 4px 12px rgba(0, 0, 0, 0.05)",
          border: "1px solid rgba(0, 0, 0, 0.1)",
          height: "100%",
          mt: 3,
        }}>
        {isSmallDifference ? (
          // Display graphic for small weight difference
          <Box sx={{ position: "relative", width: "100%", height: "100%" }}>
            <div style={{ width: "100%", height: "100%" }}>{SMALL_DIFFERENCE_SVG}</div>
            {/* Display the current weight */}
            <div
              style={{
                position: "absolute",
                top: "50px",
                left: "20px",
                color: "#241063",
                fontWeight: "bold",
              }}>
              {convertWeight(realUserWeight)} {measurementSystem === "imperial" ? "lbs" : "kg"}
            </div>
            {/* Display the goal weight */}
            {measurementSystem === "imperial" ? (
              <div
                style={{
                  position: "absolute",
                  top: "13px",
                  left: "210px",
                  color: "#FFFFFF",
                  fontWeight: "bold",
                }}>
                Goal <br />
                {convertWeight(realIdealWeight)}
                <br />
                lbs
              </div>
            ) : (
              <div
                style={{
                  position: "absolute",
                  top: "20px",
                  left: "205px",
                  color: "#FFFFFF",
                  fontWeight: "bold",
                }}>
                Goal <br />
                {convertWeight(realIdealWeight)} kg
              </div>
            )}
          </Box>
        ) : (
          // Display graphic for large weight difference
          <Box sx={{ position: "relative", width: "100%", height: "100%" }}>
            <div style={{ width: "100%", height: "100%" }}>{LARGE_DIFFERENCE_SVG}</div>
            {/* Display the current weight */}
            <div
              style={{
                position: "absolute",
                top: "-5px",
                left: "20px",
                color: "#241063",
                fontSize: window.innerWidth <= 445 ? "14px" : "16px",
                fontWeight: "500",
              }}>
              {convertWeight(realUserWeight)} {measurementSystem === "imperial" ? "lbs" : "kg"}
            </div>
            {/* Display the goal weight */}
            {measurementSystem === "imperial" ? (
              <div
                style={{
                  position: "absolute",
                  top: "29%",
                  left: "54%",
                  color: "#FFFFFF",
                  fontSize: window.innerWidth <= 445 ? "12px" : "16px",
                  fontWeight: "bold",
                }}>
                Goal <br />
                {convertWeight(realIdealWeight)}
                <br />
                lbs
              </div>
            ) : (
              <div
                style={{
                  position: "absolute",
                  top: "32%",
                  left: realIdealWeight >= 100 ? "53%" : "54%",
                  color: "#FFFFFF",
                  fontSize: window.innerWidth <= 445 ? "13px" : "16px",
                  fontWeight: "bold",
                }}>
                Goal <br />
                {convertWeight(realIdealWeight)} kg
              </div>
            )}
          </Box>
        )}

        {/* Render labels for NOW and goal month */}
        <Box
          sx={{
            display: "flex",
            justifyContent: "space-between",
            width: "100%",
            mt: 1,
          }}>
          <Typography
            sx={{
              fontSize: "14px",
              color: "#241063",
              fontWeight: 500,
              ml: 3,
            }}>
            NOW
          </Typography>
          <Typography
            sx={{
              fontSize: "14px",
              color: "#241063",
              fontWeight: 500,
              mr: 2,
            }}>
            {goalDate.toLocaleString("en-US", { month: "short" }).toUpperCase()}
          </Typography>
        </Box>
      </Box>

      {/* Disclaimer about illustrative purposes */}
      <Typography
        sx={{
          fontSize: "16px",
          color: "#999",
          textAlign: "left",
          mt: 2,
        }}>
        This chart is for illustrative purposes only
      </Typography>
    </>
  );
};
